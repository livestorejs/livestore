# In CI, direnv should fail on errors to catch issues early; locally, it shouldnâ€™t, so the rest of the environment still loads
CI=${CI:-0}
if [ "${CI}" = "1" ] || [ "${CI}" = "true" ] || [ "${CI}" = "yes" ]; then
  strict_env
fi

export WORKSPACE_ROOT=$(pwd)

export DEV_SSL_KEY="$WORKSPACE_ROOT/certs/key.pem"
export DEV_SSL_CERT="$WORKSPACE_ROOT/certs/cert.pem"

export VITE_LIVESTORE_SYNC_URL="http://localhost:8787"

export OTEL_EXPORTER_OTLP_ENDPOINT="http://localhost:4318"
export VITE_OTEL_EXPORTER_OTLP_ENDPOINT="${OTEL_EXPORTER_OTLP_ENDPOINT}"

export GRAFANA_ENDPOINT="http://localhost:30003"
export VITE_GRAFANA_ENDPOINT="${GRAFANA_ENDPOINT}"

# Needed until Corepack newest corepack version is released on nixpkgs
export COREPACK_INTEGRITY_KEYS=0

# Required in `.envrc.local`
# export MXBAI_API_KEY=""
# export MXBAI_VECTOR_STORE_ID=""

# Load .envrc.local files - check both parent (for git worktrees) and current directory
# Parent directory takes precedence as base config, current directory can override
if test -f ../.envrc.local; then
  source_env ../.envrc.local
fi
if test -f ./.envrc.local; then
  source_env ./.envrc.local
fi

if command -v nix-shell &> /dev/null
then
  # flake.nix is in nix/ to speed up Nix flake evaluation by limiting files hashed/copied to the Nix Store (self.outPath).
  # Trade-off: Requires path spec (e.g., nix develop ./nix; this script handles it via direnv's 'use flake'.)
  cd nix
  use_flake
  cd ..
fi

# Add LiveStore CLIs to PATH
export PATH="$WORKSPACE_ROOT/scripts/bin:$PATH"

# For convenience we're also exposing executables from node_modules/.bin e.g. `vite`
export PATH="$WORKSPACE_ROOT/node_modules/.bin:$PATH"

# region-start: expo
# When building react-native on iOS, it requires `cp -X` for macOS than the one from nix.
export PATH="/bin:$PATH"

# Remove once fixed https://github.com/NixOS/nixpkgs/issues/355486
export PATH="/usr/bin:/bin:$WORKSPACE_ROOT/node_modules/.bin:$PATH"
# Unset DEVELOPER_DIR to avoid conflicts with Xcode path
unset DEVELOPER_DIR
# remove end
# region-end: expo

export LS_DEV=1
export VITE_LS_DEV=$LS_DEV

export LIVESTORE_PLAYWRIGHT_DEV_SERVER_PORT="4444"

export NODE_OPTIONS="--disable-warning=ExperimentalWarning"

# export LS_TRACE_VERBOSE="1"
# export VITE_LS_TRACE_VERBOSE="1"

# Run setup script
bun run "$WORKSPACE_ROOT/scripts/standalone/setup.ts"

# Generate and load completions for those CLIs
source $WORKSPACE_ROOT/scripts/completions.sh

name: ci

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

jobs:
  lint:
    strategy:
      matrix:
        node-version: [20]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install pnpm
        uses: pnpm/action-setup@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
      - run: pnpm install
      - run: pnpm lint:check

  test:
    strategy:
      matrix:
        node-version: [20]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install pnpm
        uses: pnpm/action-setup@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
      - uses: cachix/install-nix-action@v18
      - name: Setup Cachix
        uses: cachix/cachix-action@v12
        with:
          name: schickling
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Derive monorepo examples
        run: nix develop --command bun scripts/sync-examples.ts --single-run
        env:
          WORKSPACE_ROOT: ${{ github.workspace }}
      - run: pnpm install
      - run: pnpm playwright install --with-deps
        working-directory: integration-tests
      - run: pnpm build:ts
      - run: nix develop --command pnpm test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: integration-tests/playwright-report/
          retention-days: 30
      - name: "Upload trace"
        if: ${{ !cancelled() }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        run: |
          npm install -g netlify-cli
          netlify deploy --dir=integration-tests/playwright-report --site livestore-ci --filter @livestore/integration-tests

  build-example-todomvc:
    strategy:
      matrix:
        node-version: [20]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install pnpm
        uses: pnpm/action-setup@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
      - uses: cachix/install-nix-action@v18
      - name: Setup Cachix
        uses: cachix/cachix-action@v12
        with:
          name: schickling
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Derive monorepo examples
        run: nix develop --command bun scripts/sync-examples.ts --single-run
        env:
          WORKSPACE_ROOT: ${{ github.workspace }}
      - run: pnpm install
      - run: pnpm build:ts
      - run: pnpm build
        working-directory: examples/todomvc
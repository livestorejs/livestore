name: Set up environment
description: Set up the environment with Nix and direnv.
runs:
  using: composite
  steps:
    - name: Install Determinate Nix
      uses: DeterminateSystems/determinate-nix-action@v3

    - name: Use FlakeHub Cache for Nix binaries
      # flakehub-cache-action supersedes and is faster than magic-nix-cache-action.
      uses: DeterminateSystems/flakehub-cache-action@main

    - name: Get pnpm store directory
      # This is needed because pnpm's store path is not fixed and can vary based on the environment.
      id: pnpm-store
      shell: bash
      # We use `nix develop --command` because the `pnpm` CLI is installed via Nix.
      run: echo "DIR_PATH=$(nix develop ./nix --command pnpm store path --silent)" >> $GITHUB_OUTPUT

    - name: Cache pnpm store
      uses: actions/cache@v4
      with:
       # We only should cache the pnpm store, and not the node_modules directory. Caching it duplicates effort since the
       # pnpm store already covers the package contents, and leads to issues with package resolution.
       path: ${{ steps.pnpm-store.outputs.DIR_PATH }}
       key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
       restore-keys: ${{ runner.os }}-pnpm-store-

    - name: Cache direnv setup
      uses: actions/cache@v4
      with:
        path: |
          .direnv
        key: direnv-${{ runner.os }}-${{ hashFiles('.envrc', 'nix/**', 'flake.nix', 'flake.lock', 'scripts/standalone/setup.ts') }}-${{ github.sha }}
        restore-keys: |
          direnv-${{ runner.os }}-${{ hashFiles('.envrc', 'nix/**', 'flake.nix', 'flake.lock', 'scripts/standalone/setup.ts') }}-

    - name: Install direnv
      shell: bash
      run: nix profile add nixpkgs#direnv

    - name: Load environment with direnv
      # See https://github.com/direnv/direnv/wiki/GitHubActions for more details
      shell: bash
      run: |
        direnv allow
        direnv exec . sh -c 'echo $PATH' > "$GITHUB_PATH"
        direnv export gha >> "$GITHUB_ENV"

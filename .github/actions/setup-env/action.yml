name: Set up environment
description: Set up the environment with Nix and direnv.
runs:
  using: composite
  steps:
    - name: Install Determinate Nix
      uses: DeterminateSystems/determinate-nix-action@v3

    - name: Use FlakeHub Cache for Nix binaries
      # NOTE Flakehub cache is still faster than magic-nix-cache-action
      uses: DeterminateSystems/flakehub-cache-action@main

    - name: Cache node_modules
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          .pnpm-store
        key: node_modules-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml', 'package.json') }}
        restore-keys: |
          node_modules-${{ runner.os }}-

    - name: Cache direnv setup
      uses: actions/cache@v4
      with:
        path: |
          .direnv
        key: direnv-${{ runner.os }}-${{ hashFiles('.envrc', 'nix/**', 'flake.nix', 'flake.lock', 'scripts/standalone/setup.ts') }}-${{ github.sha }}
        restore-keys: |
          direnv-${{ runner.os }}-${{ hashFiles('.envrc', 'nix/**', 'flake.nix', 'flake.lock', 'scripts/standalone/setup.ts') }}-

    - name: Install direnv
      shell: bash
      run: nix profile add nixpkgs#direnv

    - name: Load environment with direnv
      # See https://github.com/direnv/direnv/wiki/GitHubActions for more details
      shell: bash
      run: |
        direnv allow
        direnv exec . sh -c 'echo $PATH' > "$GITHUB_PATH"
        direnv export gha >> "$GITHUB_ENV"

// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`useRow > otel > should update the data based on component key > strictMode=false 1`] = `
{
  "_name": "test",
  "children": [
    {
      "_name": "livestore.in-memory-db:execute",
      "attributes": {
        "sql.query": "
      PRAGMA page_size=32768;
      PRAGMA cache_size=10000;
      PRAGMA journal_mode='MEMORY'; -- we don't flush to disk before committing a write
      PRAGMA synchronous='OFF';
      PRAGMA temp_store='MEMORY';
      PRAGMA foreign_keys='ON'; -- we want foreign key constraints to be enforced
    ",
      },
    },
    {
      "_name": "sql-in-memory-select",
      "attributes": {
        "sql.cached": false,
        "sql.query": "select 1 from UserInfo where id = 'u1'",
        "sql.rowsCount": 0,
      },
    },
    {
      "_name": "sql-in-memory-select",
      "attributes": {
        "sql.cached": false,
        "sql.query": "select 1 from UserInfo where id = 'u2'",
        "sql.rowsCount": 1,
      },
    },
    {
      "_name": "LiveStore:mutations",
      "children": [
        {
          "_name": "LiveStore:mutate",
          "attributes": {
            "livestore.mutateLabel": "mutate",
          },
          "children": [
            {
              "_name": "LiveStore:processWrites",
              "attributes": {
                "livestore.mutateLabel": "mutate",
              },
              "children": [
                {
                  "_name": "LiveStore:mutateWithoutRefresh",
                  "attributes": {
                    "livestore.args": "{
  "sql": "INSERT INTO UserInfo (id, username) VALUES ('u2', 'username_u2')"
}",
                    "livestore.mutation": "livestore.RawSql",
                  },
                  "children": [
                    {
                      "_name": "livestore.in-memory-db:execute",
                      "attributes": {
                        "sql.query": "INSERT INTO UserInfo (id, username) VALUES ('u2', 'username_u2')",
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
    },
    {
      "_name": "LiveStore:queries",
      "children": [
        {
          "_name": "sql:select * from UserInfo where id = 'u1' limit 1",
          "attributes": {
            "sql.query": "select * from UserInfo where id = 'u1' limit 1",
            "sql.rowsCount": 1,
          },
          "children": [
            {
              "_name": "sql-in-memory-select",
              "attributes": {
                "sql.cached": false,
                "sql.query": "select * from UserInfo where id = 'u1' limit 1",
                "sql.rowsCount": 1,
              },
            },
          ],
        },
        {
          "_name": "LiveStore:useRow:UserInfo:u1",
          "attributes": {
            "id": "u1",
          },
          "children": [
            {
              "_name": "LiveStore:mutateWithoutRefresh",
              "attributes": {
                "livestore.args": "{
  "id": "u1"
}",
                "livestore.mutation": "_Derived_Create_UserInfo",
              },
              "children": [
                {
                  "_name": "livestore.in-memory-db:execute",
                  "attributes": {
                    "sql.query": "INSERT INTO UserInfo (username, text, id) VALUES ($username, $text, $id)",
                  },
                },
              ],
            },
            {
              "_name": "LiveStore:useQuery:sql(rowQuery:query:UserInfo:u1)",
              "attributes": {
                "label": "sql(rowQuery:query:UserInfo:u1)",
                "stackInfo": "{"frames":[{"name":"renderHook.wrapper","filePath":"__REPLACED_FOR_SNAPSHOT__"},{"name":"useRow","filePath":"__REPLACED_FOR_SNAPSHOT__"}]}",
              },
              "children": [
                {
                  "_name": "sql:select * from UserInfo where id = 'u1' limit 1",
                  "attributes": {
                    "sql.query": "select * from UserInfo where id = 'u1' limit 1",
                    "sql.rowsCount": 1,
                  },
                  "children": [
                    {
                      "_name": "sql-in-memory-select",
                      "attributes": {
                        "sql.cached": false,
                        "sql.query": "select * from UserInfo where id = 'u1' limit 1",
                        "sql.rowsCount": 1,
                      },
                    },
                  ],
                },
                {
                  "_name": "LiveStore.subscribe",
                  "attributes": {
                    "label": "sql(rowQuery:query:UserInfo:u1)",
                    "queryLabel": "sql(rowQuery:query:UserInfo:u1)",
                  },
                },
              ],
            },
          ],
        },
        {
          "_name": "LiveStore:useRow:UserInfo:u2",
          "attributes": {
            "id": "u2",
          },
          "children": [
            {
              "_name": "LiveStore:useQuery:sql(rowQuery:query:UserInfo:u2)",
              "attributes": {
                "label": "sql(rowQuery:query:UserInfo:u2)",
                "stackInfo": "{"frames":[{"name":"renderHook.wrapper","filePath":"__REPLACED_FOR_SNAPSHOT__"},{"name":"useRow","filePath":"__REPLACED_FOR_SNAPSHOT__"}]}",
              },
              "children": [
                {
                  "_name": "sql:select * from UserInfo where id = 'u2' limit 1",
                  "attributes": {
                    "sql.query": "select * from UserInfo where id = 'u2' limit 1",
                    "sql.rowsCount": 1,
                  },
                  "children": [
                    {
                      "_name": "sql-in-memory-select",
                      "attributes": {
                        "sql.cached": false,
                        "sql.query": "select * from UserInfo where id = 'u2' limit 1",
                        "sql.rowsCount": 1,
                      },
                    },
                  ],
                },
                {
                  "_name": "LiveStore.subscribe",
                  "attributes": {
                    "label": "sql(rowQuery:query:UserInfo:u2)",
                    "queryLabel": "sql(rowQuery:query:UserInfo:u2)",
                  },
                },
              ],
            },
          ],
        },
      ],
    },
  ],
}
`;

exports[`useRow > otel > should update the data based on component key > strictMode=true 1`] = `
{
  "_name": "test",
  "children": [
    {
      "_name": "livestore.in-memory-db:execute",
      "attributes": {
        "sql.query": "
      PRAGMA page_size=32768;
      PRAGMA cache_size=10000;
      PRAGMA journal_mode='MEMORY'; -- we don't flush to disk before committing a write
      PRAGMA synchronous='OFF';
      PRAGMA temp_store='MEMORY';
      PRAGMA foreign_keys='ON'; -- we want foreign key constraints to be enforced
    ",
      },
    },
    {
      "_name": "sql-in-memory-select",
      "attributes": {
        "sql.cached": false,
        "sql.query": "select 1 from UserInfo where id = 'u1'",
        "sql.rowsCount": 0,
      },
    },
    {
      "_name": "sql-in-memory-select",
      "attributes": {
        "sql.cached": false,
        "sql.query": "select 1 from UserInfo where id = 'u2'",
        "sql.rowsCount": 1,
      },
    },
    {
      "_name": "LiveStore:mutations",
      "children": [
        {
          "_name": "LiveStore:mutate",
          "attributes": {
            "livestore.mutateLabel": "mutate",
          },
          "children": [
            {
              "_name": "LiveStore:processWrites",
              "attributes": {
                "livestore.mutateLabel": "mutate",
              },
              "children": [
                {
                  "_name": "LiveStore:mutateWithoutRefresh",
                  "attributes": {
                    "livestore.args": "{
  "sql": "INSERT INTO UserInfo (id, username) VALUES ('u2', 'username_u2')"
}",
                    "livestore.mutation": "livestore.RawSql",
                  },
                  "children": [
                    {
                      "_name": "livestore.in-memory-db:execute",
                      "attributes": {
                        "sql.query": "INSERT INTO UserInfo (id, username) VALUES ('u2', 'username_u2')",
                      },
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
    },
    {
      "_name": "LiveStore:queries",
      "children": [
        {
          "_name": "sql:select * from UserInfo where id = 'u1' limit 1",
          "attributes": {
            "sql.query": "select * from UserInfo where id = 'u1' limit 1",
            "sql.rowsCount": 1,
          },
          "children": [
            {
              "_name": "sql-in-memory-select",
              "attributes": {
                "sql.cached": false,
                "sql.query": "select * from UserInfo where id = 'u1' limit 1",
                "sql.rowsCount": 1,
              },
            },
          ],
        },
        {
          "_name": "LiveStore:useRow:UserInfo:u1",
          "attributes": {
            "id": "u1",
          },
          "children": [
            {
              "_name": "LiveStore:mutateWithoutRefresh",
              "attributes": {
                "livestore.args": "{
  "id": "u1"
}",
                "livestore.mutation": "_Derived_Create_UserInfo",
              },
              "children": [
                {
                  "_name": "livestore.in-memory-db:execute",
                  "attributes": {
                    "sql.query": "INSERT INTO UserInfo (username, text, id) VALUES ($username, $text, $id)",
                  },
                },
              ],
            },
            {
              "_name": "LiveStore:useQuery:sql(rowQuery:query:UserInfo:u1)",
              "attributes": {
                "label": "sql(rowQuery:query:UserInfo:u1)",
                "stackInfo": "{"frames":[{"name":"renderHook.wrapper","filePath":"__REPLACED_FOR_SNAPSHOT__"},{"name":"useRow","filePath":"__REPLACED_FOR_SNAPSHOT__"}]}",
              },
              "children": [
                {
                  "_name": "sql:select * from UserInfo where id = 'u1' limit 1",
                  "attributes": {
                    "sql.query": "select * from UserInfo where id = 'u1' limit 1",
                    "sql.rowsCount": 1,
                  },
                  "children": [
                    {
                      "_name": "sql-in-memory-select",
                      "attributes": {
                        "sql.cached": false,
                        "sql.query": "select * from UserInfo where id = 'u1' limit 1",
                        "sql.rowsCount": 1,
                      },
                    },
                  ],
                },
                {
                  "_name": "LiveStore.subscribe",
                  "attributes": {
                    "label": "sql(rowQuery:query:UserInfo:u1)",
                    "queryLabel": "sql(rowQuery:query:UserInfo:u1)",
                  },
                },
                {
                  "_name": "LiveStore.subscribe",
                  "attributes": {
                    "label": "sql(rowQuery:query:UserInfo:u1)",
                    "queryLabel": "sql(rowQuery:query:UserInfo:u1)",
                  },
                },
              ],
            },
          ],
        },
      ],
    },
  ],
}
`;
